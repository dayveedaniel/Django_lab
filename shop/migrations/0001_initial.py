# Generated by Django 5.0.1 on 2024-02-06 07:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        # migrations.CreateModel(
        #     name='Customer',
        #     fields=[
        #         ('customer_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
        #         ('email', models.EmailField(max_length=128, verbose_name='E-mail')),
        #         ('first_name', models.CharField(max_length=128, verbose_name='First Name')),
        #         ('last_name', models.CharField(max_length=128, verbose_name='Last Name')),
        #     ],
        # ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=10)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('full_name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('last_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percent_change', models.DecimalField(decimal_places=2, max_digits=10)),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('isTrading', models.BooleanField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d')),
            ],
            options={
                'verbose_name': 'Ticker',
                'verbose_name_plural': 'Tickers',
                'ordering': ('name',),
            },
        ),
        # migrations.CreateModel(
        #     name='Order',
        #     fields=[
        #         ('order_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
        #         ('product', models.CharField(max_length=128, verbose_name='Product')),
        #         ('order_date', models.DateField(verbose_name='Order Date')),
        #         ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.customer')),
        #     ],
        # ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_type', models.CharField(choices=[('Call', 'Call'), ('Put', 'Put')], max_length=4)),
                ('name', models.CharField(db_index=True, max_length=20)),
                ('slug', models.SlugField(max_length=200)),
                ('close', models.DecimalField(decimal_places=2, max_digits=10)),
                ('open', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ask', models.DecimalField(decimal_places=2, max_digits=10)),
                ('strike', models.DecimalField(decimal_places=2, max_digits=10)),
                ('volume', models.PositiveIntegerField()),
                ('expiration_date', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='tickers', to='shop.ticker')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('option_type__in', ['Call', 'Put'])), name='valid_option_type'),
        ),
        migrations.AlterIndexTogether(
            name='product',
            index_together={('id', 'slug')},
        ),
    ]
